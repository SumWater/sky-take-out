<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status,
                            amount, remark, phone, address, user_name, consignee, cancel_reason, rejection_reason, cancel_time,
                            estimated_delivery_time, delivery_status, delivery_time, pack_amount, tableware_number, tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod}, #{payStatus},
                #{amount}, #{remark}, #{phone}, #{address}, #{userName}, #{consignee}, #{cancelReason}, #{rejectionReason},
                #{cancelTime}, #{estimatedDeliveryTime}, #{deliveryStatus}, #{deliveryTime}, #{packAmount}, #{tablewareNumber},
                #{tablewareStatus})
    </insert>
    <update id="update">
        update orders
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
            <if test="cancelReason != null">
                cancel_reason = #{cancelReason},
            </if>
            <if test="rejectionReason != null">
                rejection_reason = #{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime},
            </if>
            <if test="deliveryStatus!= null">
                delivery_status = #{deliveryStatus},
            </if>
            <if test="deliveryTime!= null">
                delivery_time = #{deliveryTime},
            </if>
            <if test="tablewareStatus!= null">
                tableware_status = #{tablewareStatus},
            </if>
        </set>
        where id = #{id} or number = #{number}
    </update>
    <select id="pageQuery" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="number != null and number!=''">
                and number like concat('%',#{number},'%')
            </if>
            <if test="phone != null and phone!=''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>

    <select id="getTurnoverStatistics" resultType="java.lang.Double">
        SELECT
        COALESCE(SUM(
        CASE
        WHEN DATE(orders.order_time) = d.date_val AND orders.status = #{status}
        THEN orders.amount
        ELSE 0
        END
        ), 0.0) AS daily_total
        FROM (
        <foreach collection="dateList" item="date" separator=" UNION ALL ">
            SELECT #{date} AS date_val
        </foreach>
        ) d
        LEFT JOIN orders ON DATE(orders.order_time) = d.date_val
        GROUP BY d.date_val
        ORDER BY d.date_val
    </select>


    <select id="getOrderCountStatistics" resultType="java.lang.Integer">
        SELECT
        COALESCE(COUNT(o.id), 0) AS order_count
        FROM (
        <foreach collection="dateList" item="date" separator=" UNION ALL ">
            SELECT #{date} AS query_date
        </foreach>
        ) AS dates
        LEFT JOIN orders o
        ON DATE(o.order_time) = dates.query_date
        GROUP BY dates.query_date
        ORDER BY dates.query_date
    </select>


    <select id="getValidOrderCountStatistics" resultType="java.lang.Integer">
        SELECT COALESCE(COUNT(o.id), 0) AS order_count
        FROM (
        <foreach collection="dateList" item="date" separator=" UNION ALL ">
            SELECT #{date} AS query_date
        </foreach>
        ) AS dates
        LEFT JOIN orders o ON DATE(o.order_time) = dates.query_date AND o.status = #{status}
        GROUP BY dates.query_date
        ORDER BY dates.query_date
    </select>
    <select id="countByMap" resultType="java.lang.Integer">
        select count(id) from orders
        <where>
            <if test="begin != null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end!= null">
                and order_time &lt;= #{end}
            </if>
        </where>
    </select>
    <select id="sumByMap" resultType="java.lang.Double">
        select sum(amount) from orders
        <where>
            <if test="begin!= null">
                and order_time &gt;= #{begin}
            </if>
            <if test="end!= null">
                and order_time &lt;= #{end}
            </if>
        </where>
    </select>
    <select id="getSalesTop10" resultType="com.sky.dto.GoodsSalesDTO">
        select od.name, sum(od.number) number
        from order_detail od, orders o
        where od.order_id = o.id and o.status = 5 and o.order_time &gt;= #{begin} and o.order_time &lt;= #{end}
        group by od.name
        order by number desc
        limit 0,10
    </select>


</mapper>
